<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newweb.persist.security.RolePermissionMapper">

  <select id="findPermissions" parameterType="java.lang.String" resultType="java.lang.String">
    select permission_name from system_permission a right join (
    select
    permission_id
    from system_role_permission a where exists(
    select 1 from system_user_role b
    where b.user_id = (select user_id from system_user where user_name = #{username,jdbcType=CHAR})
    )
    ) b on a.permission_id = b.permission_id
  </select>
  <resultMap id="BaseResultMap" type="com.newweb.domain.security.RolePermission">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <id column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="role_permission_desc" jdbcType="VARCHAR" property="rolePermissionDesc" />
  </resultMap>

  <sql id="Base_Column_List">
    role_id, permission_id, role_permission_desc
  </sql>

  <select id="get" parameterType="com.newweb.domain.security.RolePermissionKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_role_permission
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </select>

  <delete id="delete" parameterType="com.newweb.domain.security.RolePermissionKey">
    delete from system_role_permission
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.newweb.domain.security.RolePermission">
    insert into system_role_permission (role_id, permission_id, role_permission_desc
      )
    values (#{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, #{rolePermissionDesc,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.newweb.domain.security.RolePermission">
    insert into system_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="rolePermissionDesc != null">
        role_permission_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="rolePermissionDesc != null">
        #{rolePermissionDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.newweb.domain.security.RolePermission">
    update system_role_permission
    <set>
      <if test="rolePermissionDesc != null">
        role_permission_desc = #{rolePermissionDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </update>

  <update id="update" parameterType="com.newweb.domain.security.RolePermission">
    update system_role_permission
    set role_permission_desc = #{rolePermissionDesc,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </update>

</mapper>