<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newweb.persist.security.RoleMapper">

  <resultMap id="BaseResultMap" type="com.newweb.domain.security.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
  </resultMap>

  <sql id="Base_Column_List">
    role_id, role_name, role_desc
  </sql>

  <select id="page" parameterType="com.newweb.common.util.QueryParameters" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from system_role
    <if test="params != null">
      <include refid="exampleCondition" />
    </if>
    <if test="sorts != null">
      <foreach collection="sorts" index="key" item="value" open="order by" separator=",">
        ${key} ${value}
      </foreach>
    </if>
    <if test="page != null">
      limit #{page.from} , #{page.size}
    </if>
  </select>

  <sql id="exampleCondition">
    <where>
      <if test="params.roleName != null">
        and role_name like '%${params.roleName}%'
      </if>
      <if test="params.roleDesc != null">
        and role_desc like '%${params.roleDesc}%'
      </if>
    </where>
  </sql>

  <select id="count" parameterType="com.newweb.common.util.QueryParameters" resultMap="BaseResultMap">
    select
    count(1)
    from system_role
    <if test="params != null">
      <include refid="exampleCondition" />
    </if>
  </select>

  <sql id="exampleCondition">
    <where>
      <if test="params.roleName != null">
        and role_name like '%${params.roleName}%'
      </if>
      <if test="params.roleDesc != null">
        and role_desc like '%${params.roleDesc}%'
      </if>
    </where>
  </sql>

  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <delete id="delete" parameterType="java.lang.Long">
    delete from system_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.newweb.domain.security.Role">
    insert into system_role (role_id, role_name, role_desc
      )
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.newweb.domain.security.Role">
    insert into system_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.newweb.domain.security.Role">
    update system_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <update id="update" parameterType="com.newweb.domain.security.Role">
    update system_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>